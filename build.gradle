plugins {
    id 'java'
    id 'maven-publish'
}

group 'hiof.gruppe1'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

task run(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "hiof.gruppe1.Main"
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'org.mariuszgromada.math:MathParser.org-mXparser:5.2.1'
    implementation 'mysql:mysql-connector-java:8.0.32'
    implementation 'org.xerial:sqlite-jdbc:3.39.3.0'
}

test {
    useJUnitPlatform()
}

def DBExecutable = 'sqlite3'
def DBPath = 'src/main/java/resources'
def DBFile = 'estivateSQLite.db'
def DBSQLBackup = 'estivateCleanBackup.sql'

task backupDatabase(type: Exec) {
    executable "${DBPath}/${DBExecutable}"
    args "${DBPath}/${DBFile}",
            ".output ${DBPath}/${DBSQLBackup}",
            ".dump", ".exit"
}

task restoreDatabase() {
    doFirst {
        delete file("${DBPath}/${DBFile}")
    }
    doLast {
        exec {
            executable "${DBPath}/${DBExecutable}"
            args "${DBPath}/${DBFile}",
                    ".read ${DBPath}/${DBSQLBackup}",
                    ".exit"
        }
    }
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/JarleSyvertsen/estivateORM")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = 'hiof.rammeverk.gruppe1'
            artifactId = 'estivate'
            version = "0.2-Test"
            from components.java

            pom {
                name = 'Estivate ORM'
                description = 'A mySQL library for storing and retrieving Java objects.'
            }
        }
    }
}